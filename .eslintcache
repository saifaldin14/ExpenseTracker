[{"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/index.js":"1","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/reportWebVitals.js":"2","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/App.js":"3","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/context/context.js":"4","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/styles.js":"5","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/context/contextReducer.js":"6","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/index.js":"7","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/InfoCard.jsx":"8","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Details/Details.jsx":"9","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/Main.jsx":"10","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Snackbar/Snackbar.jsx":"11","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Snackbar/styles.js":"12","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/styles.js":"13","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/useTransactions.js":"14","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/List/List.jsx":"15","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/Form/Form.jsx":"16","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/constants/categories.js":"17","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/List/styles.js":"18","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/Form/styles.js":"19","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/utils/formatDate.js":"20","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Details/styles.js":"21"},{"size":414,"mtime":1611078886486,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1606599127366,"results":"24","hashOfConfig":"23"},{"size":1453,"mtime":1611080768504,"results":"25","hashOfConfig":"26"},{"size":2259,"mtime":1611419503947,"results":"27","hashOfConfig":"23"},{"size":552,"mtime":1611080796135,"results":"28","hashOfConfig":"23"},{"size":579,"mtime":1611421156323,"results":"29","hashOfConfig":"26"},{"size":212,"mtime":1611418943784,"results":"30","hashOfConfig":"26"},{"size":435,"mtime":1611417890818,"results":"31","hashOfConfig":"23"},{"size":701,"mtime":1611080052835,"results":"32","hashOfConfig":"23"},{"size":1234,"mtime":1611081512666,"results":"33","hashOfConfig":"23"},{"size":779,"mtime":1611417579587,"results":"34","hashOfConfig":"23"},{"size":196,"mtime":1611417655845,"results":"35","hashOfConfig":"23"},{"size":490,"mtime":1611081769184,"results":"36","hashOfConfig":"23"},{"size":1132,"mtime":1611421970775,"results":"37","hashOfConfig":"23"},{"size":1366,"mtime":1611417011050,"results":"38","hashOfConfig":"23"},{"size":4722,"mtime":1611416264565,"results":"39","hashOfConfig":"23"},{"size":1710,"mtime":1611419012281,"results":"40","hashOfConfig":"26"},{"size":399,"mtime":1611417179901,"results":"41","hashOfConfig":"23"},{"size":283,"mtime":1611416392497,"results":"42","hashOfConfig":"23"},{"size":365,"mtime":1611421352347,"results":"43","hashOfConfig":"23"},{"size":237,"mtime":1611079739121,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"m6n1q0",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aom5x",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/index.js",[],["91","92"],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/reportWebVitals.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/App.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/context/context.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/styles.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/context/contextReducer.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/index.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/InfoCard.jsx",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Details/Details.jsx",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/Main.jsx",["93","94","95"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\nimport { useSpeechContext } from '@speechly/react-client';\nimport { ExpenseTrackerContext } from '../../context/context';\nimport useStyles from './styles';\nimport Form from './Form/Form';\nimport List from './List/List';\nimport InfoCard from '../InfoCard';\n\nconst ExpenseTracker = () => {\n  const classes = useStyles();\n  const { balance } = useContext(ExpenseTrackerContext);\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\n      <CardContent>\n        <Typography align=\"center\" variant=\"h5\">Total Balance ${balance}</Typography>\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\n          <InfoCard />\n        </Typography>\n        <Divider className={classes.divider} />\n        <Form />\n      </CardContent>\n      <CardContent className={classes.cartContent}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <List />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ExpenseTracker;","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Snackbar/Snackbar.jsx",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Snackbar/styles.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/styles.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/useTransactions.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/List/List.jsx",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/Form/Form.jsx",["96"],"import React, { useState, useContext, useEffect } from 'react'\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { useSpeechContext } from '@speechly/react-client';\nimport Snackbar from '../../Snackbar/Snackbar';\nimport formatDate from '../../../utils/formatDate';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport useStyles from './styles';\n\nconst initialState = {\n  amount: '',\n  category: '',\n  type: 'Income',\n  date: formatDate(new Date())\n};\n\nconst NewTransactionForm = () => {\n  const classes = useStyles();\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n  const [formData, setFormData] = useState(initialState);\n  const { segment } = useSpeechContext();\n  const [open, setOpen] = useState(false);\n\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\n      setFormData({...formData, type: 'Income' });\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\n      setFormData({...formData, type: 'Expense' });\n    }\n\n    setOpen(true);\n    addTransaction({...formData, amount: Number(formData.amount), id: uuidv4 });\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent === 'add_expense') {\n        setFormData({...formData, type: 'Expense'});\n      } else if (<segment className=\"intent in\"></segment> === 'add_income') {\n        setFormData({...formData, type: 'Income'});\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\n        return createTransaction();\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\n        return setFormData(initialState);\n      }\n\n      segment.entities.forEach(s => {\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\n\n        switch (s.type) {\n          case 'amount':\n            setFormData({...formData, amount: s.value });\n            break;\n          case 'category':\n            if (incomeCategories.map(iC => iC.type).includes(category)){\n              setFormData({...formData, type: 'Income', category });\n            } else if (expenseCategories.map(iC => iC.type).includes(category)) {\n              setFormData({...formData, type: 'Expense', category });\n            }\n            break;\n          case 'date':\n            setFormData({...formData, date: s.value });\n            break;\n          default:\n            break;\n        }\n      });\n\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\n        createTransaction();\n      }\n    }\n  }, [segment]);\n\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n\n  return (\n    <Grid container spacing={2}>\n      <Snackbar open={open} setOpen={setOpen} />\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n          {segment ? (\n            <div className=\"segment\">\n              {segment.words.map((w) => w.value).join(\" \")}\n            </div>\n          ) : null}\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select value={formData.type} onChange={e => setFormData({...formData, type: e.target.value})}>\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select value={formData.category} onChange={e => setFormData({...formData, category: e.target.value})}>\n            {selectedCategories.map(c => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={e => setFormData({...formData, amount: e.target.value})} fullWidth />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField type=\"date\" label=\"Date\" value={formData.date} onChange={e => setFormData({...formData, date: formatDate(e.target.value)})} fullWidth />\n      </Grid>\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\n    </Grid>\n  )\n}\n\nexport default NewTransactionForm\n","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/constants/categories.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/List/styles.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Main/Form/styles.js",["97"],"import { RadioGroup } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n  radioGroup: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: \"-10px\",\n  },\n  button: {\n    marginTop: \"20px\",\n  },\n}));\n","/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/utils/formatDate.js",[],"/Users/saifal-dinali/Desktop/Projects/React Projects/ExpenseTracker/ExpenseTracker/src/components/Details/styles.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"107","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":78,"column":6,"nodeType":"110","endLine":78,"endColumn":15,"suggestions":"111"},{"ruleId":"102","severity":1,"message":"112","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":20},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSpeechContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["115"],"'RadioGroup' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"118","text":"119"},[2914,2923],"[createTransaction, formData, segment]"]